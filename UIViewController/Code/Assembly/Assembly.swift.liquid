{% include 'header' %}

import UIKit
import Swinject

final class {{ module_info.name }}ModuleAssembly: Assembly {

    func assemble(container: Container) {
        container.register({{ module_info.name }}ViewController.self) { r in
            return {{ module_info.name }}ViewController()
        }.initCompleted { (r, view) in
            view.viewModel = r.resolve({{ module_info.name }}ViewModel.self)
        }
        
        container.register({{ module_info.name }}ViewModel.self) { r in
            let viewModel = {{ module_info.name }}ViewModel()
            viewModel.router = r.resolve({{ module_info.name }}Router.self)
            return viewModel
        }
        
        container.register({{ module_info.name }}ModuleHelper.self) { _ in
            return {{ module_info.name }}ModuleHelper()
        }
        
        container.register({{ module_info.name }}Router.self) { r in
            return {{ module_info.name }}Router()
        }.initCompleted { (r, router) in
            router.controllerLoader = r.resolve(ControllerLoader.self)
        }
    }
    
}
